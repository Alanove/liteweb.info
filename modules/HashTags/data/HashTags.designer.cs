#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lw.HashTags
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LAMYO")]
	public partial class HashTagsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHashTag(HashTag instance);
    partial void UpdateHashTag(HashTag instance);
    partial void DeleteHashTag(HashTag instance);
    partial void InsertHashTags_Relation(HashTags_Relation instance);
    partial void UpdateHashTags_Relation(HashTags_Relation instance);
    partial void DeleteHashTags_Relation(HashTags_Relation instance);
    #endregion
		
		public HashTagsDataContext() : 
				base(global::lw.HashTags.Properties.Settings.Default.LAMYOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HashTagsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HashTagsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HashTagsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HashTagsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HashTag> HashTags
		{
			get
			{
				return this.GetTable<HashTag>();
			}
		}
		
		public System.Data.Linq.Table<HashTags_Relation> HashTags_Relations
		{
			get
			{
				return this.GetTable<HashTags_Relation>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.HashTags_Update")]
		public int HashTags_Update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string tags, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RelationId", DbType="Int")] System.Nullable<int> relationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RelationType", DbType="SmallInt")] System.Nullable<short> relationType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tags, relationId, relationType);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HashTags")]
	public partial class HashTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagId;
		
		private string _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIdChanging(int value);
    partial void OnTagIdChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    #endregion
		
		public HashTag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(50)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HashTags_Relations")]
	public partial class HashTags_Relation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagId;
		
		private int _RelateTo;
		
		private short _RelationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIdChanging(int value);
    partial void OnTagIdChanged();
    partial void OnRelateToChanging(int value);
    partial void OnRelateToChanged();
    partial void OnRelationTypeChanging(short value);
    partial void OnRelationTypeChanged();
    #endregion
		
		public HashTags_Relation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelateTo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RelateTo
		{
			get
			{
				return this._RelateTo;
			}
			set
			{
				if ((this._RelateTo != value))
				{
					this.OnRelateToChanging(value);
					this.SendPropertyChanging();
					this._RelateTo = value;
					this.SendPropertyChanged("RelateTo");
					this.OnRelateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationType", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RelationType
		{
			get
			{
				return this._RelationType;
			}
			set
			{
				if ((this._RelationType != value))
				{
					this.OnRelationTypeChanging(value);
					this.SendPropertyChanging();
					this._RelationType = value;
					this.SendPropertyChanged("RelationType");
					this.OnRelationTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
