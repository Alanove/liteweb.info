#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lw.Polls
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fv")]
	public partial class PollsContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPollAnswer(PollAnswer instance);
    partial void UpdatePollAnswer(PollAnswer instance);
    partial void DeletePollAnswer(PollAnswer instance);
    partial void InsertPoll(Poll instance);
    partial void UpdatePoll(Poll instance);
    partial void DeletePoll(Poll instance);
    partial void InsertPollsUserResponse(PollsUserResponse instance);
    partial void UpdatePollsUserResponse(PollsUserResponse instance);
    partial void DeletePollsUserResponse(PollsUserResponse instance);
    #endregion
		
		public PollsContextDataContext() : 
				base(global::lw.Polls.Properties.Settings.Default.fvConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PollsContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PollsContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PollsContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PollsContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PollAnswer> PollAnswers
		{
			get
			{
				return this.GetTable<PollAnswer>();
			}
		}
		
		public System.Data.Linq.Table<PollResult> PollResults
		{
			get
			{
				return this.GetTable<PollResult>();
			}
		}
		
		public System.Data.Linq.Table<Poll> Polls
		{
			get
			{
				return this.GetTable<Poll>();
			}
		}
		
		public System.Data.Linq.Table<PollsUserResponse> PollsUserResponses
		{
			get
			{
				return this.GetTable<PollsUserResponse>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Polls_GetCurrentPoll", IsComposable=true)]
		public System.Nullable<int> Polls_GetCurrentPoll([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> week, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dayOfWeek)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), week, dayOfWeek).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollAnswers")]
	public partial class PollAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollAnswerID;
		
		private int _PollID;
		
		private string _DisplayText;
		
		private int _SortOrder;
		
		private System.Nullable<bool> _Correct;
		
		private EntitySet<PollsUserResponse> _PollsUserResponses;
		
		private EntityRef<Poll> _Poll;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollAnswerIDChanging(int value);
    partial void OnPollAnswerIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnDisplayTextChanging(string value);
    partial void OnDisplayTextChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCorrectChanging(System.Nullable<bool> value);
    partial void OnCorrectChanged();
    #endregion
		
		public PollAnswer()
		{
			this._PollsUserResponses = new EntitySet<PollsUserResponse>(new Action<PollsUserResponse>(this.attach_PollsUserResponses), new Action<PollsUserResponse>(this.detach_PollsUserResponses));
			this._Poll = default(EntityRef<Poll>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollAnswerID
		{
			get
			{
				return this._PollAnswerID;
			}
			set
			{
				if ((this._PollAnswerID != value))
				{
					this.OnPollAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._PollAnswerID = value;
					this.SendPropertyChanged("PollAnswerID");
					this.OnPollAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this.OnDisplayTextChanging(value);
					this.SendPropertyChanging();
					this._DisplayText = value;
					this.SendPropertyChanged("DisplayText");
					this.OnDisplayTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correct", DbType="Bit")]
		public System.Nullable<bool> Correct
		{
			get
			{
				return this._Correct;
			}
			set
			{
				if ((this._Correct != value))
				{
					this.OnCorrectChanging(value);
					this.SendPropertyChanging();
					this._Correct = value;
					this.SendPropertyChanged("Correct");
					this.OnCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollAnswer_PollsUserResponse", Storage="_PollsUserResponses", ThisKey="PollAnswerID", OtherKey="PollAnswerID")]
		public EntitySet<PollsUserResponse> PollsUserResponses
		{
			get
			{
				return this._PollsUserResponses;
			}
			set
			{
				this._PollsUserResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollAnswer", Storage="_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollAnswers.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollAnswers.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollsUserResponses(PollsUserResponse entity)
		{
			this.SendPropertyChanging();
			entity.PollAnswer = this;
		}
		
		private void detach_PollsUserResponses(PollsUserResponse entity)
		{
			this.SendPropertyChanging();
			entity.PollAnswer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollResults")]
	public partial class PollResult
	{
		
		private int _PollAnswerID;
		
		private int _PollID;
		
		private string _DisplayText;
		
		private int _SortOrder;
		
		private System.Nullable<int> _Votes;
		
		private int _TotalVotes;
		
		private System.Nullable<int> _Percentage;
		
		public PollResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswerID", DbType="Int NOT NULL")]
		public int PollAnswerID
		{
			get
			{
				return this._PollAnswerID;
			}
			set
			{
				if ((this._PollAnswerID != value))
				{
					this._PollAnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this._PollID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votes", DbType="Int")]
		public System.Nullable<int> Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				if ((this._Votes != value))
				{
					this._Votes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVotes", DbType="Int NOT NULL")]
		public int TotalVotes
		{
			get
			{
				return this._TotalVotes;
			}
			set
			{
				if ((this._TotalVotes != value))
				{
					this._TotalVotes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int")]
		public System.Nullable<int> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this._Percentage = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Polls")]
	public partial class Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollID;
		
		private string _DisplayText;
		
		private string _UniqueName;
		
		private System.Nullable<bool> _IsDefault;
		
		private string _Category;
		
		private System.Nullable<short> _Difficulty;
		
		private string _Reference;
		
		private System.Nullable<short> _Day;
		
		private System.Nullable<short> _Week;
		
		private System.Nullable<short> _Year;
		
		private string _Picture;
		
		private string _AdditionalText;
		
		private System.Nullable<System.Guid> _UID;
		
		private System.Nullable<int> _PollNbr;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<int> _MemberId;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<bool> _Can_Have_Other;
		
		private string _Other_Text;
		
		private EntitySet<PollAnswer> _PollAnswers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnDisplayTextChanging(string value);
    partial void OnDisplayTextChanged();
    partial void OnUniqueNameChanging(string value);
    partial void OnUniqueNameChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDifficultyChanging(System.Nullable<short> value);
    partial void OnDifficultyChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnDayChanging(System.Nullable<short> value);
    partial void OnDayChanged();
    partial void OnWeekChanging(System.Nullable<short> value);
    partial void OnWeekChanged();
    partial void OnYearChanging(System.Nullable<short> value);
    partial void OnYearChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnAdditionalTextChanging(string value);
    partial void OnAdditionalTextChanged();
    partial void OnUIDChanging(System.Nullable<System.Guid> value);
    partial void OnUIDChanged();
    partial void OnPollNbrChanging(System.Nullable<int> value);
    partial void OnPollNbrChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCan_Have_OtherChanging(System.Nullable<bool> value);
    partial void OnCan_Have_OtherChanged();
    partial void OnOther_TextChanging(string value);
    partial void OnOther_TextChanged();
    #endregion
		
		public Poll()
		{
			this._PollAnswers = new EntitySet<PollAnswer>(new Action<PollAnswer>(this.attach_PollAnswers), new Action<PollAnswer>(this.detach_PollAnswers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this.OnDisplayTextChanging(value);
					this.SendPropertyChanging();
					this._DisplayText = value;
					this.SendPropertyChanged("DisplayText");
					this.OnDisplayTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueName", DbType="NVarChar(250)")]
		public string UniqueName
		{
			get
			{
				return this._UniqueName;
			}
			set
			{
				if ((this._UniqueName != value))
				{
					this.OnUniqueNameChanging(value);
					this.SendPropertyChanging();
					this._UniqueName = value;
					this.SendPropertyChanged("UniqueName");
					this.OnUniqueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(25)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficulty", DbType="SmallInt")]
		public System.Nullable<short> Difficulty
		{
			get
			{
				return this._Difficulty;
			}
			set
			{
				if ((this._Difficulty != value))
				{
					this.OnDifficultyChanging(value);
					this.SendPropertyChanging();
					this._Difficulty = value;
					this.SendPropertyChanged("Difficulty");
					this.OnDifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(50)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="SmallInt")]
		public System.Nullable<short> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="SmallInt")]
		public System.Nullable<short> Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(150)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalText", DbType="NVarChar(512)")]
		public string AdditionalText
		{
			get
			{
				return this._AdditionalText;
			}
			set
			{
				if ((this._AdditionalText != value))
				{
					this.OnAdditionalTextChanging(value);
					this.SendPropertyChanging();
					this._AdditionalText = value;
					this.SendPropertyChanged("AdditionalText");
					this.OnAdditionalTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollNbr", DbType="Int")]
		public System.Nullable<int> PollNbr
		{
			get
			{
				return this._PollNbr;
			}
			set
			{
				if ((this._PollNbr != value))
				{
					this.OnPollNbrChanging(value);
					this.SendPropertyChanging();
					this._PollNbr = value;
					this.SendPropertyChanged("PollNbr");
					this.OnPollNbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Can_Have_Other", DbType="Bit")]
		public System.Nullable<bool> Can_Have_Other
		{
			get
			{
				return this._Can_Have_Other;
			}
			set
			{
				if ((this._Can_Have_Other != value))
				{
					this.OnCan_Have_OtherChanging(value);
					this.SendPropertyChanging();
					this._Can_Have_Other = value;
					this.SendPropertyChanged("Can_Have_Other");
					this.OnCan_Have_OtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other_Text", DbType="NVarChar(256)")]
		public string Other_Text
		{
			get
			{
				return this._Other_Text;
			}
			set
			{
				if ((this._Other_Text != value))
				{
					this.OnOther_TextChanging(value);
					this.SendPropertyChanging();
					this._Other_Text = value;
					this.SendPropertyChanged("Other_Text");
					this.OnOther_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollAnswer", Storage="_PollAnswers", ThisKey="PollID", OtherKey="PollID")]
		public EntitySet<PollAnswer> PollAnswers
		{
			get
			{
				return this._PollAnswers;
			}
			set
			{
				this._PollAnswers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollAnswers(PollAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollAnswers(PollAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollsUserResponses")]
	public partial class PollsUserResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private int _PollAnswerID;
		
		private string _AnswerText;
		
		private EntityRef<PollAnswer> _PollAnswer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnPollAnswerIDChanging(int value);
    partial void OnPollAnswerIDChanged();
    partial void OnAnswerTextChanging(string value);
    partial void OnAnswerTextChanged();
    #endregion
		
		public PollsUserResponse()
		{
			this._PollAnswer = default(EntityRef<PollAnswer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PollAnswerID
		{
			get
			{
				return this._PollAnswerID;
			}
			set
			{
				if ((this._PollAnswerID != value))
				{
					if (this._PollAnswer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._PollAnswerID = value;
					this.SendPropertyChanged("PollAnswerID");
					this.OnPollAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(256)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this.OnAnswerTextChanging(value);
					this.SendPropertyChanging();
					this._AnswerText = value;
					this.SendPropertyChanged("AnswerText");
					this.OnAnswerTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollAnswer_PollsUserResponse", Storage="_PollAnswer", ThisKey="PollAnswerID", OtherKey="PollAnswerID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PollAnswer PollAnswer
		{
			get
			{
				return this._PollAnswer.Entity;
			}
			set
			{
				PollAnswer previousValue = this._PollAnswer.Entity;
				if (((previousValue != value) 
							|| (this._PollAnswer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PollAnswer.Entity = null;
						previousValue.PollsUserResponses.Remove(this);
					}
					this._PollAnswer.Entity = value;
					if ((value != null))
					{
						value.PollsUserResponses.Add(this);
						this._PollAnswerID = value.PollAnswerID;
					}
					else
					{
						this._PollAnswerID = default(int);
					}
					this.SendPropertyChanged("PollAnswer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
